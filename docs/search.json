[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "",
    "section": "",
    "text": "Kerry Back  J. Howard Creekmore Professor of Finance and Professor of Economics kerryback@gmail.com\n\n\n\nRoom 316, 10:15 – 11:45, 8/21/2023 – 10/2/2023\n\n\n\nThis course is intended for PhD students in business and economics. However, it may be appropriate for students in other programs also.\nPython is a general purpose programming language that has become especially important for machine learning and for data analysis more generally. It can be used as a substitute for MATLAB, Stata, SAS, and R and also for web scraping, natural language processing, and much more. This course provides an introduction to the language and to the libraries that are most useful for business research. The topics to be covered in the course are listed below. This is a hands-on course, and a part of each class session will be allocated to students working individually or in groups to apply and extend the class material.\nChatGPT makes it much easier to use python. Throughout the course, we will generate python code by using ChatGPT-4 either at the OpenAI website (for this, I highly recommend a Plus subscription) or via an extension to VS Code.\nIt is fine if you have zero experience with python or any other programming language. It is also fine if you are experienced with python and are taking the course only to learn about certain libraries you haven’t used before. In the former case, I will not expect you to become a proficient programmer in six weeks. My goal in that case is to introduce you to the possibilities and show you how to get started. Googling and ChatGPT can take care of the rest.\n\n\n\nThere will be weekly assignments. You are allowed to google and/or to use ChatGPT for assistance with the assignments. There will not be an exam.\n\n\n\nThis is a tentative schedule. I think it is a feasible schedule even for students with zero prior programming experience. However, it may be modified based on student interests and experience.\n\nPreliminaries: libraries, IDEs, environments, git\nBasic python: data types, conditional statements, loops, functions, classes\nVectors and matrices: numpy\nData handling: pandas\nMore data handling: pandas and SQL\nVisualization: matplotlib, seaborn\nScientific programming: scipy, cvxopt\nStatistics: statsmodels, linearmodels\nMachine learning for classification: scikit-learn, xgboost\nMachine learning for regression and data pipelines: scikit-learn, xgboost\nNeural networks: pytorch\nWeb scraping: beautiful soup, selenium"
  },
  {
    "objectID": "assignments.html",
    "href": "assignments.html",
    "title": "",
    "section": "",
    "text": "1. Intro to Python\n2. Numpy and Pandas\n3. More Pandas\n4. Visualizaton"
  },
  {
    "objectID": "assignment1.html",
    "href": "assignment1.html",
    "title": "",
    "section": "",
    "text": "Create a function that takes the lengths of two sides of a right triangle as inputs and returns the length of the hypotenuse.\n\nCreate a list of names. Using list enumeration, print the names in the form\n\n    1. Adam\n    2. Bob\n    3. ...\n\nCreate a function that takes a list of strings as an input and prints the list as in part (a).\nCreate a function that takes a list of strings as its input and returns a dictionary with integers 1, 2, … as keys and the strings as values.\n\nCreate a list of numbers from 1 to 10.\n\nWrite a loop to print only even numbers from the list.\nWrite another loop to calculate and print the factorial of each number in the list.\n\nWrite a loop to halve a given number until the result is less than 1.0e-6.\nCreate a function is_palindrome to check if a string is a palindrome (reads the same forwards as backwards – e.g., ‘radar’ is a palindrome). The function should return True if the input is a palindrome and False otherwise.\nWrite a script (.py file) that prompts the user to input\n\ntitle\nauthor\njournal\nvolume\npages\nyear\nkeyword\npathname of a .bib file\n\nThe function should then append a bibtex entry to the end of the .bib file formatted as follows, where the items within braces are the user’s inputs.\n\n    @article{keyword,\n    title={title},\n    author={author names},\n    journal={journal name},\n    volume={volume number},\n    pages={pages},\n    year={year},\n    }"
  },
  {
    "objectID": "slides.html",
    "href": "slides.html",
    "title": "",
    "section": "",
    "text": "1. Python, VS Code, and Git Setup\n2. Introduction to the Python Language\n3. Introduction to NumPy\n4. Introduction to Pandas\n5. Additional Pandas\n5. WRDS\n6. Visualization"
  },
  {
    "objectID": "assignment2.html",
    "href": "assignment2.html",
    "title": "",
    "section": "",
    "text": "Creating Arrays:\n\nCreate a one-dimensional array of integers from 0 to 9.\nCreate a two-dimensional array of zeros with shape (5, 5).\nCreate a three-dimensional array of ones with shape (2, 3, 4).\n\nManipulating Arrays:\n\nReshape the above two-dimensional array to a one-dimensional array.\nStack two arrays horizontally and vertically.\nSplit a given array into multiple sub-arrays.\nFlatten a multi-dimensional array.\nExpand the dimensions of a one-dimensional array.\n\nArray Indexing:\n\nExtract the third and fifth elements from a one-dimensional array.\nExtract a 2x2 sub-matrix from a given two-dimensional array.\nUse boolean indexing to extract even numbers from an array.\n\nArithmetic Operations:\n\nPerform element-wise addition, subtraction, multiplication, and division on two given arrays.\nMultiply a 2x3 matrix with a 1x3 matrix using broadcasting.\n\nAggregation Functions:\n\nCalculate the sum, mean, standard deviation, and variance of a one-dimensional array.\nFind the minimum and maximum values in a one-dimensional array.\nRepeat (a) and (b) along a single axis of a two-dimensional array.\n\nLinear Algebra:\n\nTranspose a matrix\nMultiply two matrices.\nCompute the dot product of two vectors.\nCalculate the determinant of a matrix.\nCompute the eigenvalues and eigenvectors of a matrix.\nSolve a system of linear equations using NumPy.\n\nSimulation:\n\nSimulate 100 steps of a random walk with standard normal innovations.\nGenerate 1,000 simulations of the random walk from part (a). Compute the mean, median, and standard deviation of the terminal value across the 1,000 simulations.\n\n\n\n\n\nBasics of pandas Series and DataFrames\n\nCreate a series from a list of integers.\nExtract values at specific indices from the Series.\nChange the index of the series to alphabetical letters.\nCreate a dataFrame from a dictionary of lists.\nExtract specific columns from the dataFrame.\nAdd a new column to the dataFrame.\nCreate a dataframe filled with random numbers.\n\nBasic DataFrame Operations:\n\nCalculate the summary statistics for a DataFrame column.\nSort the dataFrame based on a specific column.\nFilter rows based on certain criteria.\nReplace specific values in a DataFrame.\nRename columns.\nMap values in a column to other values using a dictionary.\n\nMissing values:\n\n\nFind all missing values in a DataFrame. b Fill missing values with zeros.\nFill missing values in a column with the column’s mean value.\nDrop rows with missing data.\nFind duplicate rows.\nDrop all but the last row in each set of duplicate rows.\n\n\nFiltering and Aggregation:\n\n\nUsing the ‘tips’ dataset, filter the rows where the total bill is greater than $10.\nCreate a new column in the ‘tips’ dataset called ‘bill_per_person’ which is the total bill divided by the size of the party.\nGroup by the ‘day’ column and compute the average total bill for each day."
  },
  {
    "objectID": "solutions.html",
    "href": "solutions.html",
    "title": "",
    "section": "",
    "text": "Assignment 1\n\nJupyter Notebook\nPython Script"
  },
  {
    "objectID": "slides.html#slide-decks-busi-520-python-for-business-research",
    "href": "slides.html#slide-decks-busi-520-python-for-business-research",
    "title": "",
    "section": "",
    "text": "1. Python, VS Code, and Git Setup\n2. Introduction to the Python Language\n3. Introduction to NumPy\n4. Introduction to Pandas"
  },
  {
    "objectID": "index.html#python-for-business-research-rice-university-fall-2023",
    "href": "index.html#python-for-business-research-rice-university-fall-2023",
    "title": "",
    "section": "",
    "text": "Kerry Back  J. Howard Creekmore Professor of Finance and Professor of Economics kerryback@gmail.com\n\n\n\nRoom 316, 10:15 – 11:45, 8/21/2023 – 10/2/2023\n\n\n\nThis course is intended for PhD students in business and economics. However, it may be appropriate for students in other programs also.\nPython is a general purpose programming language that has become especially important for machine learning and for data analysis more generally. It can be used as a substitute for MATLAB, Stata, SAS, and R and also for web scraping, natural language processing, and much more. This course provides an introduction to the language and to the libraries that are most useful for business research. The topics to be covered in the course are listed below. This is a hands-on course, and a part of each class session will be allocated to students working individually or in groups to apply and extend the class material.\nChatGPT makes it much easier to use python. Throughout the course, we will generate python code by using ChatGPT-4 either at the OpenAI website (for this, I highly recommend a Plus subscription) or via an extension to VS Code.\nIt is fine if you have zero experience with python or any other programming language. It is also fine if you are experienced with python and are taking the course only to learn about certain libraries you haven’t used before. In the former case, I will not expect you to become a proficient programmer in six weeks. My goal in that case is to introduce you to the possibilities and show you how to get started. Googling and ChatGPT can take care of the rest.\n\n\n\nThere will be weekly assignments. You are allowed to google and/or to use ChatGPT for assistance with the assignments. There will not be an exam.\n\n\n\nThis is a tentative schedule. I think it is a feasible schedule even for students with zero prior programming experience. However, it may be modified based on student interests and experience.\n\nPreliminaries: libraries, IDEs, environments, git\nBasic python: data types, conditional statements, loops, functions, classes\nVectors and matrices: numpy\nData handling: pandas\nMore data handling: pandas and SQL\nVisualization: matplotlib, seaborn\nScientific programming: scipy, cvxopt\nStatistics: statsmodels, linearmodels\nMachine learning for classification: scikit-learn, xgboost\nMachine learning for regression and data pipelines: scikit-learn, xgboost\nNeural networks: pytorch\nWeb scraping: beautiful soup, selenium"
  },
  {
    "objectID": "assignment3.html",
    "href": "assignment3.html",
    "title": "",
    "section": "",
    "text": "Read the datasets announcements.csv and crsp.csv files located in the notebooks repo into dataframes. Each row of announcements.csv is a (stock, quarter) pair. Each row of crsp.csv is a (stock, month) pair. Complete the following. Upload a zip file containing (i) your code, (ii) a text file or Word doc containing your answers to 1, 2, 9, 10, 11, 12, and 15, and (iii) three .csv files as specified in 8, 11, and 14.\n\nHow many stock-months (rows) are there in the crsp dataframe? How many stock-quarters (rows) are there in announcements.csv?\nHow many unique permnos are there in the announcements dataframe? Hint: there is a “unique” method. Use “len” also.\nCreate a “quarter” column in the announcements dataframe based on the fiscal_period column.\nCreate a “quarter” column in the crsp dataframe based on the date column.\nExtract the last day of each quarter for each permno in the crsp dataframe. Hint: use groupby and .last().\nChange the name of the ‘date’ column in the announcements dataframe to ‘ea_date’. This is the date of the firm’s quarterly earnings announcement. Hint: pass a dictionary as columns = {‘old name’: ‘new name’} to the rename method.\nMerge the reduced crsp dataframe with the announcement dataframe, matching on [‘permno’, ‘quarter’]. Hint: permno and quarter will form the index of the reduced crsp dataframe after grouping. You will need to reset the index or use left_on=… and right_index=True, or right_on=… and left_index=True in the merge.\nFilter the merged dataframe to keep only rows satisfying price>=5, me>=50000, and shrcd in [10, 11]. Save this as a csv file with the name merged.csv and submit on Canvas. Use the filtered dataframe to answer all remaining questions.\nHow many stock-quarters are there in the filtered dataframe and how many unique permnos?\nWhich day of the week is the most popular day for earnings announcements? What fraction of earnings announcements occur on this day? Hint: the weekday method of a datetime object returns 0 for Monday, 1 for Tuesday, etc.\nFor each permno, find the most popular day of the week for earnings announcements. For each permno, calculate the fraction of the announcements that are made on that day. Save this as a csv file with the name days.csv and submit on Canvas. What is the mean of this fraction across permnos?\nCut the dataframe into ‘above median’ and ‘below median’ based on the absolute value of date_diff. What is the mean of the fraction in the previous queston across permnos within each of the two groups?\nFor each permno, calculate the fraction of zeros for date_diff.\nFilter the dataframe further to include only stock-quarters for which\n\nthe fraction of zeros for date_diff is less than 0.5\nthe fraction of announcements on the permno’s most popular day of the week is less than 0.9.\n\n\nSave this as a csv file with the name filtered.csv and submit on Canvas.\n\nHow many stock-quarters are in the newly filtered dataframe? How many unique permnos?"
  },
  {
    "objectID": "assignment4.html",
    "href": "assignment4.html",
    "title": "",
    "section": "",
    "text": "Submit a Jupyter notebook. Answer the “what do you learn” questions in markdown cells.\n\nCreate a stacked bar chart to show the different distributions of tips for males and females in the seaborn tips dataset. What do you learn from the figure?\nCreate a figure or figures to show the different distributions of wages for white males, white females, nonwhite males, and nonwhite females in the WAGES1 dataset. What do you learn from the figure.\nCreate a figure or figures to show how wage depends on education for white males, white females, nonwhite males, and nonwhite females in the WAGES1 dataset. Change the 0-1 dummy variables to more informative names so the legend will be easier to interpret. What do you learn from the figure?\nCreate a pairplot of educ and wage. Use hue=“female.” Change the dummy variable to more informative names so the legend will be easier to interpret. Add regression lines to the scatterplot in a different color than the points. Create it as a lower diagonal matrix to reduce the clutter (i.e., only one scatter plot). Put educ on the x-axis of the scatter plot. What do you learn from the figure?\nFor 3d plotting, we used code like the following:\n\na = np.linspace(0, 1, 11)\nb = np.linspace(10, 20, 11)\nA, B = np.meshgrid(a, b)\nLook at A and B and explain what they are. Define\nC = A + B\nCreate a filled contour plot with three labeled contour lines at the values C=15, C=20, and C=25.\n\nThe file option_sims.csv contains simulations from a model of market maker profits and stock and option order imbalances. Produce a bivariate density plot of the stock and option order imbalances. What do you learn from the figure?\nBin the stock and option order imbalances into a 100 x 100 grid and compute the average market maker profits in each cell. Use a heatmap to show the average market maker profits as a function of the stock and option order imbalances. What do you learn from the figure?"
  },
  {
    "objectID": "assignment4.html#assignment-4-busi-520-python-for-business-research-jones-graduate-school-of-business-rice-university",
    "href": "assignment4.html#assignment-4-busi-520-python-for-business-research-jones-graduate-school-of-business-rice-university",
    "title": "",
    "section": "",
    "text": "Submit a Jupyter notebook. Answer the “what do you learn” questions in markdown cells.\n\nCreate a stacked bar chart to show the different distributions of tips for males and females in the seaborn tips dataset. What do you learn from the figure?\nCreate a figure or figures to show the different distributions of wages for white males, white females, nonwhite males, and nonwhite females in the WAGES1 dataset. What do you learn from the figure.\nCreate a figure or figures to show how wage depends on education for white males, white females, nonwhite males, and nonwhite females in the WAGES1 dataset. Change the 0-1 dummy variables to more informative names so the legend will be easier to interpret. What do you learn from the figure?\nCreate a pairplot of educ and wage. Use hue=“female.” Change the dummy variable to more informative names so the legend will be easier to interpret. Add regression lines to the scatterplot in a different color than the points. Create it as a lower diagonal matrix to reduce the clutter (i.e., only one scatter plot). Put educ on the x-axis of the scatter plot. What do you learn from the figure?\nFor 3d plotting, we used code like the following:\n\na = np.linspace(0, 1, 11)\nb = np.linspace(10, 20, 11)\nA, B = np.meshgrid(a, b)\nLook at A and B and explain what they are. Define\nC = A + B\nCreate a filled contour plot with three labeled contour lines at the values C=15, C=20, and C=25.\n\nThe file option_sims.csv contains simulations from a model of market maker profits and stock and option order imbalances. Produce a bivariate density plot of the stock and option order imbalances. What do you learn from the figure?\nBin the stock and option order imbalances into a 100 x 100 grid and compute the average market maker profits in each cell. Use a heatmap to show the average market maker profits as a function of the stock and option order imbalances. What do you learn from the figure?"
  }
]