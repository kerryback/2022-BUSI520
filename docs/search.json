[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "",
    "section": "",
    "text": "Kerry Back  J. Howard Creekmore Professor of Finance and Professor of Economics kerryback@gmail.com\n\n\n\nRoom 316, 10:15 – 11:45, 8/21/2023 – 10/2/2023\n\n\n\nThis course is intended for PhD students in business and economics. However, it may be appropriate for students in other programs also.\nPython is a general purpose programming language that has become especially important for machine learning and for data analysis more generally. It can be used as a substitute for MATLAB, Stata, SAS, and R and also for web scraping, natural language processing, and much more. This course provides an introduction to the language and to the libraries that are most useful for business research. The topics to be covered in the course are listed below. This is a hands-on course, and a part of each class session will be allocated to students working individually or in groups to apply and extend the class material.\nChatGPT makes it much easier to use python. Throughout the course, we will generate python code by using ChatGPT-4 either at the OpenAI website (for this, I highly recommend a Plus subscription) or via an extension to VS Code.\nIt is fine if you have zero experience with python or any other programming language. It is also fine if you are experienced with python and are taking the course only to learn about certain libraries you haven’t used before. In the former case, I will not expect you to become a proficient programmer in six weeks. My goal in that case is to introduce you to the possibilities and show you how to get started. Googling and ChatGPT can take care of the rest.\n\n\n\nThere will be weekly assignments. You are allowed to google and/or to use ChatGPT for assistance with the assignments. There will not be an exam.\n\n\n\nThis is a tentative schedule. I think it is a feasible schedule even for students with zero prior programming experience. However, it may be modified based on student interests and experience.\n\nPreliminaries: libraries, IDEs, environments, git\nBasic python: data types, conditional statements, loops, functions, classes\nVectors and matrices: numpy\nData handling: pandas\nMore data handling: pandas and SQL\nVisualization: matplotlib, seaborn\nScientific programming: scipy, cvxopt\nStatistics: statsmodels, linearmodels\nMachine learning for classification: scikit-learn, xgboost\nMachine learning for regression and data pipelines: scikit-learn, xgboost\nNeural networks: pytorch\nWeb scraping: beautiful soup, selenium"
  },
  {
    "objectID": "assignments.html",
    "href": "assignments.html",
    "title": "",
    "section": "",
    "text": "1. Intro to Python\n2. Numpy and Pandas"
  },
  {
    "objectID": "assignment1.html",
    "href": "assignment1.html",
    "title": "",
    "section": "",
    "text": "Create a function that takes the lengths of two sides of a right triangle as inputs and returns the length of the hypotenuse.\n\nCreate a list of names. Using list enumeration, print the names in the form\n\n    1. Adam\n    2. Bob\n    3. ...\n\nCreate a function that takes a list of strings as an input and prints the list as in part (a).\nCreate a function that takes a list of strings as its input and returns a dictionary with integers 1, 2, … as keys and the strings as values.\n\nCreate a list of numbers from 1 to 10.\n\nWrite a loop to print only even numbers from the list.\nWrite another loop to calculate and print the factorial of each number in the list.\n\nWrite a loop to halve a given number until the result is less than 1.0e-6.\nCreate a function is_palindrome to check if a string is a palindrome (reads the same forwards as backwards – e.g., ‘radar’ is a palindrome). The function should return True if the input is a palindrome and False otherwise.\nWrite a script (.py file) that prompts the user to input\n\ntitle\nauthor\njournal\nvolume\npages\nyear\nkeyword\npathname of a .bib file\n\nThe function should then append a bibtex entry to the end of the .bib file formatted as follows, where the items within braces are the user’s inputs.\n\n    @article{keyword,\n    title={title},\n    author={author names},\n    journal={journal name},\n    volume={volume number},\n    pages={pages},\n    year={year},\n    }"
  },
  {
    "objectID": "slides.html",
    "href": "slides.html",
    "title": "",
    "section": "",
    "text": "1. Python, VS Code, and Git Setup\n2. Introduction to the Python Language\n3. Introduction to NumPy\n4. Introduction to Pandas\n5. Additional Pandas"
  },
  {
    "objectID": "assignment2.html",
    "href": "assignment2.html",
    "title": "",
    "section": "",
    "text": "Creating Arrays:\n\nCreate a one-dimensional array of integers from 0 to 9.\nCreate a two-dimensional array of zeros with shape (5, 5).\nCreate a three-dimensional array of ones with shape (2, 3, 4).\n\nManipulating Arrays:\n\nReshape the above two-dimensional array to a one-dimensional array.\nStack two arrays horizontally and vertically.\nSplit a given array into multiple sub-arrays.\nFlatten a multi-dimensional array.\nExpand the dimensions of a one-dimensional array.\n\nArray Indexing:\n\nExtract the third and fifth elements from a one-dimensional array.\nExtract a 2x2 sub-matrix from a given two-dimensional array.\nUse boolean indexing to extract even numbers from an array.\n\nArithmetic Operations:\n\nPerform element-wise addition, subtraction, multiplication, and division on two given arrays.\nMultiply a 2x3 matrix with a 1x3 matrix using broadcasting.\n\nAggregation Functions:\n\nCalculate the sum, mean, standard deviation, and variance of a one-dimensional array.\nFind the minimum and maximum values in a one-dimensional array.\nRepeat (a) and (b) along a single axis of a two-dimensional array.\n\nLinear Algebra:\n\nTranspose a matrix\nMultiply two matrices.\nCompute the dot product of two vectors.\nCalculate the determinant of a matrix.\nCompute the eigenvalues and eigenvectors of a matrix.\nSolve a system of linear equations using NumPy.\n\nSimulation:\n\nSimulate 100 steps of a random walk with standard normal innovations.\nGenerate 1,000 simulations of the random walk from part (a). Compute the mean, median, and standard deviation of the terminal value across the 1,000 simulations.\n\n\n\n\n\nBasics of pandas Series and DataFrames\n\nCreate a series from a list of integers.\nExtract values at specific indices from the Series.\nChange the index of the series to alphabetical letters.\nCreate a dataFrame from a dictionary of lists.\nExtract specific columns from the dataFrame.\nAdd a new column to the dataFrame.\nCreate a dataframe filled with random numbers.\n\nBasic DataFrame Operations:\n\nCalculate the summary statistics for a DataFrame column.\nSort the dataFrame based on a specific column.\nFilter rows based on certain criteria.\nReplace specific values in a DataFrame.\nRename columns.\nMap values in a column to other values using a dictionary.\n\nMissing values:\n\n\nFind all missing values in a DataFrame. b Fill missing values with zeros.\nFill missing values in a column with the column’s mean value.\nDrop rows with missing data.\nFind duplicate rows.\nDrop all but the last row in each set of duplicate rows.\n\n\nFiltering and Aggregation:\n\n\nUsing the ‘tips’ dataset, filter the rows where the total bill is greater than $10.\nCreate a new column in the ‘tips’ dataset called ‘bill_per_person’ which is the total bill divided by the size of the party.\nGroup by the ‘day’ column and compute the average total bill for each day."
  },
  {
    "objectID": "solutions.html",
    "href": "solutions.html",
    "title": "",
    "section": "",
    "text": "Assignment 1\n\nJupyter Notebook\nPython Script"
  },
  {
    "objectID": "slides.html#slide-decks-busi-520-python-for-business-research",
    "href": "slides.html#slide-decks-busi-520-python-for-business-research",
    "title": "",
    "section": "",
    "text": "1. Python, VS Code, and Git Setup\n2. Introduction to the Python Language\n3. Introduction to NumPy\n4. Introduction to Pandas"
  },
  {
    "objectID": "index.html#python-for-business-research-rice-university-fall-2023",
    "href": "index.html#python-for-business-research-rice-university-fall-2023",
    "title": "",
    "section": "",
    "text": "Kerry Back  J. Howard Creekmore Professor of Finance and Professor of Economics kerryback@gmail.com\n\n\n\nRoom 316, 10:15 – 11:45, 8/21/2023 – 10/2/2023\n\n\n\nThis course is intended for PhD students in business and economics. However, it may be appropriate for students in other programs also.\nPython is a general purpose programming language that has become especially important for machine learning and for data analysis more generally. It can be used as a substitute for MATLAB, Stata, SAS, and R and also for web scraping, natural language processing, and much more. This course provides an introduction to the language and to the libraries that are most useful for business research. The topics to be covered in the course are listed below. This is a hands-on course, and a part of each class session will be allocated to students working individually or in groups to apply and extend the class material.\nChatGPT makes it much easier to use python. Throughout the course, we will generate python code by using ChatGPT-4 either at the OpenAI website (for this, I highly recommend a Plus subscription) or via an extension to VS Code.\nIt is fine if you have zero experience with python or any other programming language. It is also fine if you are experienced with python and are taking the course only to learn about certain libraries you haven’t used before. In the former case, I will not expect you to become a proficient programmer in six weeks. My goal in that case is to introduce you to the possibilities and show you how to get started. Googling and ChatGPT can take care of the rest.\n\n\n\nThere will be weekly assignments. You are allowed to google and/or to use ChatGPT for assistance with the assignments. There will not be an exam.\n\n\n\nThis is a tentative schedule. I think it is a feasible schedule even for students with zero prior programming experience. However, it may be modified based on student interests and experience.\n\nPreliminaries: libraries, IDEs, environments, git\nBasic python: data types, conditional statements, loops, functions, classes\nVectors and matrices: numpy\nData handling: pandas\nMore data handling: pandas and SQL\nVisualization: matplotlib, seaborn\nScientific programming: scipy, cvxopt\nStatistics: statsmodels, linearmodels\nMachine learning for classification: scikit-learn, xgboost\nMachine learning for regression and data pipelines: scikit-learn, xgboost\nNeural networks: pytorch\nWeb scraping: beautiful soup, selenium"
  }
]